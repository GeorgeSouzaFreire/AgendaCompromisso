/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-05-27 16:00:31 UTC)
 * on 2016-06-22 at 21:47:42 UTC 
 * Modify at your own risk.
 */

package br.poc.agenda.backend.loginEndpoint;

/**
 * Service definition for LoginEndpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link LoginEndpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class LoginEndpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the loginEndpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://sharp-ring-133523.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "loginEndpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public LoginEndpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  LoginEndpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "insertLogin".
   *
   * This request holds the parameters needed by the loginEndpoint server.  After setting any optional
   * parameters, call the {@link InsertLogin#execute()} method to invoke the remote operation.
   *
   * @param content the {@link br.poc.agenda.backend.loginEndpoint.model.Login}
   * @return the request
   */
  public InsertLogin insertLogin(br.poc.agenda.backend.loginEndpoint.model.Login content) throws java.io.IOException {
    InsertLogin result = new InsertLogin(content);
    initialize(result);
    return result;
  }

  public class InsertLogin extends LoginEndpointRequest<br.poc.agenda.backend.loginEndpoint.model.Login> {

    private static final String REST_PATH = "login";

    /**
     * Create a request for the method "insertLogin".
     *
     * This request holds the parameters needed by the the loginEndpoint server.  After setting any
     * optional parameters, call the {@link InsertLogin#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertLogin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link br.poc.agenda.backend.loginEndpoint.model.Login}
     * @since 1.13
     */
    protected InsertLogin(br.poc.agenda.backend.loginEndpoint.model.Login content) {
      super(LoginEndpoint.this, "POST", REST_PATH, content, br.poc.agenda.backend.loginEndpoint.model.Login.class);
    }

    @Override
    public InsertLogin setAlt(java.lang.String alt) {
      return (InsertLogin) super.setAlt(alt);
    }

    @Override
    public InsertLogin setFields(java.lang.String fields) {
      return (InsertLogin) super.setFields(fields);
    }

    @Override
    public InsertLogin setKey(java.lang.String key) {
      return (InsertLogin) super.setKey(key);
    }

    @Override
    public InsertLogin setOauthToken(java.lang.String oauthToken) {
      return (InsertLogin) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertLogin setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertLogin) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertLogin setQuotaUser(java.lang.String quotaUser) {
      return (InsertLogin) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertLogin setUserIp(java.lang.String userIp) {
      return (InsertLogin) super.setUserIp(userIp);
    }

    @Override
    public InsertLogin set(String parameterName, Object value) {
      return (InsertLogin) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listLogin".
   *
   * This request holds the parameters needed by the loginEndpoint server.  After setting any optional
   * parameters, call the {@link ListLogin#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListLogin listLogin() throws java.io.IOException {
    ListLogin result = new ListLogin();
    initialize(result);
    return result;
  }

  public class ListLogin extends LoginEndpointRequest<br.poc.agenda.backend.loginEndpoint.model.CollectionResponseLogin> {

    private static final String REST_PATH = "login";

    /**
     * Create a request for the method "listLogin".
     *
     * This request holds the parameters needed by the the loginEndpoint server.  After setting any
     * optional parameters, call the {@link ListLogin#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListLogin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListLogin() {
      super(LoginEndpoint.this, "GET", REST_PATH, null, br.poc.agenda.backend.loginEndpoint.model.CollectionResponseLogin.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListLogin setAlt(java.lang.String alt) {
      return (ListLogin) super.setAlt(alt);
    }

    @Override
    public ListLogin setFields(java.lang.String fields) {
      return (ListLogin) super.setFields(fields);
    }

    @Override
    public ListLogin setKey(java.lang.String key) {
      return (ListLogin) super.setKey(key);
    }

    @Override
    public ListLogin setOauthToken(java.lang.String oauthToken) {
      return (ListLogin) super.setOauthToken(oauthToken);
    }

    @Override
    public ListLogin setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListLogin) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListLogin setQuotaUser(java.lang.String quotaUser) {
      return (ListLogin) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListLogin setUserIp(java.lang.String userIp) {
      return (ListLogin) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListLogin setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListLogin setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @Override
    public ListLogin set(String parameterName, Object value) {
      return (ListLogin) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "loginSenha".
   *
   * This request holds the parameters needed by the loginEndpoint server.  After setting any optional
   * parameters, call the {@link LoginSenha#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param senha
   * @return the request
   */
  public LoginSenha loginSenha(java.lang.String email, java.lang.String senha) throws java.io.IOException {
    LoginSenha result = new LoginSenha(email, senha);
    initialize(result);
    return result;
  }

  public class LoginSenha extends LoginEndpointRequest<br.poc.agenda.backend.loginEndpoint.model.Login> {

    private static final String REST_PATH = "usuarioSenha/{email}/{senha}";

    /**
     * Create a request for the method "loginSenha".
     *
     * This request holds the parameters needed by the the loginEndpoint server.  After setting any
     * optional parameters, call the {@link LoginSenha#execute()} method to invoke the remote
     * operation. <p> {@link
     * LoginSenha#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param senha
     * @since 1.13
     */
    protected LoginSenha(java.lang.String email, java.lang.String senha) {
      super(LoginEndpoint.this, "GET", REST_PATH, null, br.poc.agenda.backend.loginEndpoint.model.Login.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.senha = com.google.api.client.util.Preconditions.checkNotNull(senha, "Required parameter senha must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public LoginSenha setAlt(java.lang.String alt) {
      return (LoginSenha) super.setAlt(alt);
    }

    @Override
    public LoginSenha setFields(java.lang.String fields) {
      return (LoginSenha) super.setFields(fields);
    }

    @Override
    public LoginSenha setKey(java.lang.String key) {
      return (LoginSenha) super.setKey(key);
    }

    @Override
    public LoginSenha setOauthToken(java.lang.String oauthToken) {
      return (LoginSenha) super.setOauthToken(oauthToken);
    }

    @Override
    public LoginSenha setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (LoginSenha) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public LoginSenha setQuotaUser(java.lang.String quotaUser) {
      return (LoginSenha) super.setQuotaUser(quotaUser);
    }

    @Override
    public LoginSenha setUserIp(java.lang.String userIp) {
      return (LoginSenha) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public LoginSenha setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String senha;

    /**

     */
    public java.lang.String getSenha() {
      return senha;
    }

    public LoginSenha setSenha(java.lang.String senha) {
      this.senha = senha;
      return this;
    }

    @Override
    public LoginSenha set(String parameterName, Object value) {
      return (LoginSenha) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeLogin".
   *
   * This request holds the parameters needed by the loginEndpoint server.  After setting any optional
   * parameters, call the {@link RemoveLogin#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveLogin removeLogin(java.lang.Long id) throws java.io.IOException {
    RemoveLogin result = new RemoveLogin(id);
    initialize(result);
    return result;
  }

  public class RemoveLogin extends LoginEndpointRequest<Void> {

    private static final String REST_PATH = "login/{id}";

    /**
     * Create a request for the method "removeLogin".
     *
     * This request holds the parameters needed by the the loginEndpoint server.  After setting any
     * optional parameters, call the {@link RemoveLogin#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveLogin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveLogin(java.lang.Long id) {
      super(LoginEndpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveLogin setAlt(java.lang.String alt) {
      return (RemoveLogin) super.setAlt(alt);
    }

    @Override
    public RemoveLogin setFields(java.lang.String fields) {
      return (RemoveLogin) super.setFields(fields);
    }

    @Override
    public RemoveLogin setKey(java.lang.String key) {
      return (RemoveLogin) super.setKey(key);
    }

    @Override
    public RemoveLogin setOauthToken(java.lang.String oauthToken) {
      return (RemoveLogin) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveLogin setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveLogin) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveLogin setQuotaUser(java.lang.String quotaUser) {
      return (RemoveLogin) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveLogin setUserIp(java.lang.String userIp) {
      return (RemoveLogin) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveLogin setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveLogin set(String parameterName, Object value) {
      return (RemoveLogin) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateLogin".
   *
   * This request holds the parameters needed by the loginEndpoint server.  After setting any optional
   * parameters, call the {@link UpdateLogin#execute()} method to invoke the remote operation.
   *
   * @param content the {@link br.poc.agenda.backend.loginEndpoint.model.Login}
   * @return the request
   */
  public UpdateLogin updateLogin(br.poc.agenda.backend.loginEndpoint.model.Login content) throws java.io.IOException {
    UpdateLogin result = new UpdateLogin(content);
    initialize(result);
    return result;
  }

  public class UpdateLogin extends LoginEndpointRequest<br.poc.agenda.backend.loginEndpoint.model.Login> {

    private static final String REST_PATH = "login";

    /**
     * Create a request for the method "updateLogin".
     *
     * This request holds the parameters needed by the the loginEndpoint server.  After setting any
     * optional parameters, call the {@link UpdateLogin#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateLogin#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link br.poc.agenda.backend.loginEndpoint.model.Login}
     * @since 1.13
     */
    protected UpdateLogin(br.poc.agenda.backend.loginEndpoint.model.Login content) {
      super(LoginEndpoint.this, "PUT", REST_PATH, content, br.poc.agenda.backend.loginEndpoint.model.Login.class);
    }

    @Override
    public UpdateLogin setAlt(java.lang.String alt) {
      return (UpdateLogin) super.setAlt(alt);
    }

    @Override
    public UpdateLogin setFields(java.lang.String fields) {
      return (UpdateLogin) super.setFields(fields);
    }

    @Override
    public UpdateLogin setKey(java.lang.String key) {
      return (UpdateLogin) super.setKey(key);
    }

    @Override
    public UpdateLogin setOauthToken(java.lang.String oauthToken) {
      return (UpdateLogin) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateLogin setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateLogin) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateLogin setQuotaUser(java.lang.String quotaUser) {
      return (UpdateLogin) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateLogin setUserIp(java.lang.String userIp) {
      return (UpdateLogin) super.setUserIp(userIp);
    }

    @Override
    public UpdateLogin set(String parameterName, Object value) {
      return (UpdateLogin) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link LoginEndpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link LoginEndpoint}. */
    @Override
    public LoginEndpoint build() {
      return new LoginEndpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link LoginEndpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setLoginEndpointRequestInitializer(
        LoginEndpointRequestInitializer loginendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(loginendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
